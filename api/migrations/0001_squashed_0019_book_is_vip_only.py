# Generated by Django 2.2 on 2020-12-19 12:47

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_fsm


class Migration(migrations.Migration):

    replaces = [
        ('api', '0001_initial'),
        ('api', '0002_auto_20190410_0446'),
        ('api', '0003_favoritebook'),
        ('api', '0004_auto_20190416_2213'),
        ('api', '0005_auto_20190416_2244'),
        ('api', '0006_auto_20190528_1240'),
        ('api', '0007_auto_20190528_1249'),
        ('api', '0008_shopcar'),
        ('api', '0009_auto_20190716_1732'),
        ('api', '0010_auto_20190831_1244'),
        ('api', '0011_auto_20191028_0409'),
        ('api', '0012_auto_20191030_0919'),
        ('api', '0013_auto_20200112_2133'),
        ('api', '0014_oauthrecord'),
        ('api', '0015_book_stock'),
        ('api', '0016_auto_20200823_1250'),
        ('api', '0017_auto_20200825_0546'),
        ('api', '0018_auto_20200907_0544'),
        ('api', '0019_book_is_vip_only'),
    ]

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.CharField(max_length=254, null=True, unique=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'author',
            },
        ),
        migrations.CreateModel(
            name='BookType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'book_type',
            },
        ),
        migrations.CreateModel(
            name='PublishCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'publish_company',
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('publish_date', models.DateTimeField(blank=True, null=True)),
                ('price_origin', models.IntegerField()),
                ('price_discount', models.IntegerField(blank=True, null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='api.Author')),
                ('publish_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='api.PublishCompany')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.BookType')),
                ('update_at', models.DateTimeField(null=True)),
                ('stock', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'book',
            },
        ),
        migrations.CreateModel(
            name='PayOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', django_fsm.FSMIntegerField(default=0)),
                ('total_price', models.DecimalField(decimal_places=3, max_digits=10)),
                ('pay_type', models.CharField(max_length=30)),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'pay_order',
            },
        ),
        migrations.CreateModel(
            name='PayOrderDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=3, max_digits=10)),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.Book')),
                ('pay_order', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.PayOrder')),
            ],
            options={
                'db_table': 'pay_order_detail',
            },
        ),
        migrations.CreateModel(
            name='ShopHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(max_length=30)),
                ('transaction_total_price', models.DecimalField(decimal_places=3, max_digits=10)),
                ('transaction_currency', models.CharField(max_length=5)),
                ('transaction_pay_type', models.CharField(max_length=15)),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('pay_order', models.ForeignKey(default=99999, on_delete=django.db.models.deletion.DO_NOTHING, to='api.PayOrder')),
            ],
            options={
                'db_table': 'shop_history',
            },
        ),
        migrations.CreateModel(
            name='FavoriteBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isFavorite', models.BooleanField()),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'favorite_book',
                'unique_together': {('book', 'user')},
            },
        ),
        migrations.CreateModel(
            name='OauthRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(max_length=32)),
                ('uid', models.CharField(max_length=32)),
                ('create_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'api_oauth_record',
            },
        ),
        migrations.CreateModel(
            name='ShopCar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0)),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('sold', models.BooleanField(default=False)),
                ('sold_date', models.DateTimeField(default=None, null=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'shop_car',
                'unique_together': {('user', 'book')},
            },
        ),
        migrations.CreateModel(
            name='BookTop3',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_count', models.IntegerField()),
                ('count_time', models.CharField(max_length=20)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Book')),
            ],
            options={
                'db_table': 'book_top3',
            },
        ),
        migrations.AddIndex(
            model_name='booktop3',
            index=models.Index(fields=['book'], name='book_top3_book_id_3c87b0_idx'),
        ),
        migrations.AddIndex(
            model_name='booktop3',
            index=models.Index(fields=['count_time'], name='book_top3_count_t_01af56_idx'),
        ),
        migrations.AddIndex(
            model_name='favoritebook',
            index=models.Index(fields=['book', 'user'], name='favorite_bo_book_id_88fdc2_idx'),
        ),
        migrations.AddIndex(
            model_name='oauthrecord',
            index=models.Index(fields=['user'], name='api_oauth_r_user_id_28aef2_idx'),
        ),
        migrations.AddIndex(
            model_name='payorderdetail',
            index=models.Index(fields=['pay_order'], name='pay_order_d_pay_ord_a22e4a_idx'),
        ),
        migrations.AddIndex(
            model_name='shopcar',
            index=models.Index(fields=['user', 'book'], name='shop_car_user_id_fc0bd7_idx'),
        ),
        migrations.AddIndex(
            model_name='shophistory',
            index=models.Index(fields=['pay_order'], name='shop_histor_pay_ord_69c79d_idx'),
        ),
        migrations.AddField(
            model_name='book',
            name='is_vip_only',
            field=models.BooleanField(default=False),
        ),
    ]
